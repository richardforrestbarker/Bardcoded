<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bardcoded.API</name>
    </assembly>
    <members>
        <member name="M:Bardcoded.API.Controllers.ItemsController.GetAllItems">
            <summary>
            Gets all known barcodes.
            </summary>
            <returns>A List of known barcodes and their product images</returns>
            <remarks>
            Example response: 
            []
            </remarks>
            <response code="200">The list.</response>
        </member>
        <member name="M:Bardcoded.API.Controllers.ItemsController.Get(System.String)">
            <summary>
            Gets a single item by its barcode.
            </summary>
            <param name="bard">The code of the item to get.</param>
            <returns>The item and an image.</returns>
            <response code="200">The item.</response>
            <response code="400">If the bard is null or empty string.</response>
            <response code="404">If the bard is not found.</response>
        </member>
        <member name="M:Bardcoded.API.Controllers.ItemsController.Post(Bardcoded.API.Data.Requests.BardcodeInjestRequest)">
            <summary>
            Creates an item by it's barcode. If that item is known already then returns a 409. If the barcode fails validation, returns a 400.
            </summary>
            <param name="bard">The code of the item to get.</param>
            <returns>The item and an image.</returns>
            <response code="201">The item.</response>
            <response code="400">If the bard is null or empty string.</response>
            <response code="409">If the bard exists.</response>
        </member>
        <member name="M:Bardcoded.API.Controllers.ItemsController.Put(Bardcoded.API.Data.Requests.BardcodeUpdateRequest)">
            <summary>
            Updates an item by it's barcode. If that item is not found then returns a 404. If the barcode fails validation, returns a 400.
            </summary>
            <param name="bard">The code of the item to get.</param>
            <returns>The item and an image.</returns>
            <response code="200">The item.</response>
            <response code="400">If the bard is null or empty string.</response>
            <response code="404">If the bard doesn't exist.</response>
        </member>
        <member name="M:Bardcoded.API.Controllers.ItemsController.Delete(System.Int32)">
            <summary>
            Does nothing. Will delete later
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
